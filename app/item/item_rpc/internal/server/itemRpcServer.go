// Code generated by goctl. DO NOT EDIT!
// Source: item_rpc.proto

package server

import (
	"context"

	"micro/app/item/item_rpc/internal/logic"
	"micro/app/item/item_rpc/internal/svc"
	"micro/app/item/item_rpc/item_rpc"
)

type ItemRpcServer struct {
	svcCtx *svc.ServiceContext
	item_rpc.UnimplementedItemRpcServer
}

func NewItemRpcServer(svcCtx *svc.ServiceContext) *ItemRpcServer {
	return &ItemRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *ItemRpcServer) Ping(ctx context.Context, in *item_rpc.Request) (*item_rpc.Response, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *ItemRpcServer) Login(ctx context.Context, in *item_rpc.LoginRequest) (*item_rpc.Response, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *ItemRpcServer) Register(ctx context.Context, in *item_rpc.RegisterRequest) (*item_rpc.Response, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}
